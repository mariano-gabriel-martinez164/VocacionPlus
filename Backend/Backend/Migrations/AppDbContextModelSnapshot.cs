// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VocacionPlus.Database;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("CarreraTag", b =>
                {
                    b.Property<int>("CarrerasId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CarrerasId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("CarreraTag");
                });

            modelBuilder.Entity("VocacionPlus.Models.Carrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FacultadId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlanDeEstudio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FacultadId");

                    b.ToTable("carreras");
                });

            modelBuilder.Entity("VocacionPlus.Models.Facultad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<bool>("Accesibilidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Accesibilidad")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Facultad");
                });

            modelBuilder.Entity("VocacionPlus.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TestVocacionalId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TestVocacionalId");

                    b.ToTable("tags");
                });

            modelBuilder.Entity("VocacionPlus.Models.TestVocacional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Artistico")
                        .HasColumnType("REAL");

                    b.Property<float>("Convencional")
                        .HasColumnType("REAL");

                    b.Property<float>("Emprendedor")
                        .HasColumnType("REAL");

                    b.Property<float>("Investigador")
                        .HasColumnType("REAL");

                    b.Property<float>("Realista")
                        .HasColumnType("REAL");

                    b.Property<float>("Social")
                        .HasColumnType("REAL");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("testVocacionales");
                });

            modelBuilder.Entity("VocacionPlus.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TestVocacionalId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("VocacionPlus.Models.Valoracion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AutorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CarreraId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Puntuacion")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("CarreraId");

                    b.ToTable("valoraciones");
                });

            modelBuilder.Entity("CarreraTag", b =>
                {
                    b.HasOne("VocacionPlus.Models.Carrera", null)
                        .WithMany()
                        .HasForeignKey("CarrerasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VocacionPlus.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VocacionPlus.Models.Carrera", b =>
                {
                    b.HasOne("VocacionPlus.Models.Facultad", "Facultad")
                        .WithMany()
                        .HasForeignKey("FacultadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facultad");
                });

            modelBuilder.Entity("VocacionPlus.Models.Tag", b =>
                {
                    b.HasOne("VocacionPlus.Models.TestVocacional", null)
                        .WithMany("Tags")
                        .HasForeignKey("TestVocacionalId");
                });

            modelBuilder.Entity("VocacionPlus.Models.TestVocacional", b =>
                {
                    b.HasOne("VocacionPlus.Models.Usuario", "Usuario")
                        .WithOne("TestVocacional")
                        .HasForeignKey("VocacionPlus.Models.TestVocacional", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("VocacionPlus.Models.Valoracion", b =>
                {
                    b.HasOne("VocacionPlus.Models.Usuario", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VocacionPlus.Models.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("CarreraId");

                    b.Navigation("Autor");

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("VocacionPlus.Models.TestVocacional", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("VocacionPlus.Models.Usuario", b =>
                {
                    b.Navigation("TestVocacional")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
